data segment
    msg db 10,13, "Enter a string: $"
    msg1 db 10,13, "String is: $"
    msg2 db 10,13, "Length of String is: $"
    line db 10,13, "$"
    msg3 db 10,13, "Reversing the string: $"
    str db 25 dup("$")
    str2 db 25 dup("$")
data ends

code segment
    assume cs: code, ds: data

start:
    ; Initialize the data segment
    mov ax, data
    mov ds, ax

    ; Display the prompt "Enter a string: $"
    lea dx, msg
    mov ah, 09h
    int 21h

    ; Read the input string from user (max 25 characters)
    mov ah, 0Ah
    lea dx, str
    int 21h

    ; Display "String is: $"
    lea dx, msg1
    mov ah, 09h
    int 21h

    ; Display the entered string
    lea dx, str+2
    mov ah, 09h
    int 21h

    ; Display "Length of String is: $"
    lea dx, msg2
    mov ah, 09h
    int 21h

    ; Call the length1 procedure to display the length of the string
    call length1

    ; Display "Reversing the string: $"
    lea dx, msg3
    mov ah, 09h
    int 21h

    ; Call the reverse procedure to reverse the string
    call reverse

    ; Display the reversed string
    lea dx, str2
    mov ah, 09h
    int 21h

    ; Terminate the program
    mov ah, 04Ch
    int 21h

length1 proc near
    ; Get the length byte stored at str+1
    mov dl, [str+1]         ; Get the length byte (str+1 holds the length)
    add dl, 30h             ; Convert it to ASCII
    mov ah, 02h             ; DOS function to print a character
    int 21h                 ; Print the length character
    ret
length1 endp

reverse proc near
    lea dx, line            ; Print a newline for formatting
    mov ah, 09h
    int 21h

    ; Set up registers for reversing the string
    mov di, 00h             ; Destination index for reversed string (in str2)
    mov cl, [str+1]         ; Load the length of the string into cl
    mov ch, 00h             ; Clear the high byte of cx (we don't need it)
    mov si, cx              ; Copy the length to si
    add si, 02h             ; Adjust the source index to point to the last character of the string (str+2 is the start of the string)

up:
    mov dl, [str+si]        ; Load the current character from the input string into dl
    mov ah, 02h             ; DOS function to print a character
    mov [str2+di], dl       ; Store the character in str2 (reversed string)
    inc di                  ; Increment the destination index
    dec si                  ; Decrement the source index
    cmp si, 01h             ; Compare si with 1 (to stop after the first character)
    jne up                  ; If not 1, loop again

    ret
reverse endp

code ends

end start
